/// <reference types="node" />
import type * as gax from 'google-gax';
import type { Callback, CallOptions, Descriptors, ClientOptions, PaginationCallback } from 'google-gax';
import { Transform } from 'stream';
import * as protos from '../../protos/protos';
/**
 *  The Dataflow Metrics API lets you monitor the progress of Dataflow
 *  jobs.
 * @class
 * @memberof v1beta3
 */
export declare class MetricsV1Beta3Client {
    private _terminated;
    private _opts;
    private _providedCustomServicePath;
    private _gaxModule;
    private _gaxGrpc;
    private _protos;
    private _defaults;
    auth: gax.GoogleAuth;
    descriptors: Descriptors;
    warn: (code: string, message: string, warnType?: string) => void;
    innerApiCalls: {
        [name: string]: Function;
    };
    metricsV1Beta3Stub?: Promise<{
        [name: string]: Function;
    }>;
    /**
     * Construct an instance of MetricsV1Beta3Client.
     *
     * @param {object} [options] - The configuration object.
     * The options accepted by the constructor are described in detail
     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
     * The common options are:
     * @param {object} [options.credentials] - Credentials object.
     * @param {string} [options.credentials.client_email]
     * @param {string} [options.credentials.private_key]
     * @param {string} [options.email] - Account email address. Required when
     *     using a .pem or .p12 keyFilename.
     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
     *     .p12 key downloaded from the Google Developers Console. If you provide
     *     a path to a JSON file, the projectId option below is not necessary.
     *     NOTE: .pem and .p12 require you to specify options.email as well.
     * @param {number} [options.port] - The port on which to connect to
     *     the remote host.
     * @param {string} [options.projectId] - The project ID from the Google
     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
     *     the environment variable GCLOUD_PROJECT for your project ID. If your
     *     app is running in an environment which supports
     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
     *     your project ID will be detected automatically.
     * @param {string} [options.apiEndpoint] - The domain name of the
     *     API remote host.
     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
     *     Follows the structure of {@link gapicConfig}.
     * @param {boolean | "rest"} [options.fallback] - Use HTTP fallback mode.
     *     Pass "rest" to use HTTP/1.1 REST API instead of gRPC.
     *     For more information, please check the
     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
     *     need to avoid loading the default gRPC version and want to use the fallback
     *     HTTP implementation. Load only fallback version and pass it to the constructor:
     *     ```
     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
     *     const client = new MetricsV1Beta3Client({fallback: 'rest'}, gax);
     *     ```
     */
    constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback);
    /**
     * Initialize the client.
     * Performs asynchronous operations (such as authentication) and prepares the client.
     * This function will be called automatically when any class method is called for the
     * first time, but if you need to initialize it before calling an actual method,
     * feel free to call initialize() directly.
     *
     * You can await on this method if you want to make sure the client is initialized.
     *
     * @returns {Promise} A promise that resolves to an authenticated service stub.
     */
    initialize(): Promise<{
        [name: string]: Function;
    }>;
    /**
     * The DNS address for this API service.
     * @returns {string} The DNS address for this service.
     */
    static get servicePath(): string;
    /**
     * The DNS address for this API service - same as servicePath(),
     * exists for compatibility reasons.
     * @returns {string} The DNS address for this service.
     */
    static get apiEndpoint(): string;
    /**
     * The port for this API service.
     * @returns {number} The default port for this service.
     */
    static get port(): number;
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     * @returns {string[]} List of default scopes.
     */
    static get scopes(): string[];
    getProjectId(): Promise<string>;
    getProjectId(callback: Callback<string, undefined, undefined>): void;
    /**
     * Request the job status.
     *
     * To request the status of a job, we recommend using
     * `projects.locations.jobs.getMetrics` with a [regional endpoint]
     * (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
     * `projects.jobs.getMetrics` is not recommended, as you can only request the
     * status of jobs that are running in `us-central1`.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.projectId
     *   A project id.
     * @param {string} request.jobId
     *   The job to get metrics for.
     * @param {google.protobuf.Timestamp} request.startTime
     *   Return only metric data that has changed since this time.
     *   Default is to return all information about all metrics for the job.
     * @param {string} request.location
     *   The [regional endpoint]
     *   (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
     *   contains the job specified by job_id.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.dataflow.v1beta3.JobMetrics|JobMetrics}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta3/metrics_v1_beta3.get_job_metrics.js</caption>
     * region_tag:dataflow_v1beta3_generated_MetricsV1Beta3_GetJobMetrics_async
     */
    getJobMetrics(request?: protos.google.dataflow.v1beta3.IGetJobMetricsRequest, options?: CallOptions): Promise<[
        protos.google.dataflow.v1beta3.IJobMetrics,
        protos.google.dataflow.v1beta3.IGetJobMetricsRequest | undefined,
        {} | undefined
    ]>;
    getJobMetrics(request: protos.google.dataflow.v1beta3.IGetJobMetricsRequest, options: CallOptions, callback: Callback<protos.google.dataflow.v1beta3.IJobMetrics, protos.google.dataflow.v1beta3.IGetJobMetricsRequest | null | undefined, {} | null | undefined>): void;
    getJobMetrics(request: protos.google.dataflow.v1beta3.IGetJobMetricsRequest, callback: Callback<protos.google.dataflow.v1beta3.IJobMetrics, protos.google.dataflow.v1beta3.IGetJobMetricsRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Request detailed information about the execution status of the job.
     *
     * EXPERIMENTAL.  This API is subject to change or removal without notice.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.projectId
     *   A project id.
     * @param {string} request.jobId
     *   The job to get execution details for.
     * @param {string} request.location
     *   The [regional endpoint]
     *   (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
     *   contains the job specified by job_id.
     * @param {number} request.pageSize
     *   If specified, determines the maximum number of stages to
     *   return.  If unspecified, the service may choose an appropriate
     *   default, or may return an arbitrarily large number of results.
     * @param {string} request.pageToken
     *   If supplied, this should be the value of next_page_token returned
     *   by an earlier call. This will cause the next page of results to
     *   be returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.dataflow.v1beta3.StageSummary|StageSummary}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `getJobExecutionDetailsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    getJobExecutionDetails(request?: protos.google.dataflow.v1beta3.IGetJobExecutionDetailsRequest, options?: CallOptions): Promise<[
        protos.google.dataflow.v1beta3.IStageSummary[],
        protos.google.dataflow.v1beta3.IGetJobExecutionDetailsRequest | null,
        protos.google.dataflow.v1beta3.IJobExecutionDetails
    ]>;
    getJobExecutionDetails(request: protos.google.dataflow.v1beta3.IGetJobExecutionDetailsRequest, options: CallOptions, callback: PaginationCallback<protos.google.dataflow.v1beta3.IGetJobExecutionDetailsRequest, protos.google.dataflow.v1beta3.IJobExecutionDetails | null | undefined, protos.google.dataflow.v1beta3.IStageSummary>): void;
    getJobExecutionDetails(request: protos.google.dataflow.v1beta3.IGetJobExecutionDetailsRequest, callback: PaginationCallback<protos.google.dataflow.v1beta3.IGetJobExecutionDetailsRequest, protos.google.dataflow.v1beta3.IJobExecutionDetails | null | undefined, protos.google.dataflow.v1beta3.IStageSummary>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.projectId
     *   A project id.
     * @param {string} request.jobId
     *   The job to get execution details for.
     * @param {string} request.location
     *   The [regional endpoint]
     *   (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
     *   contains the job specified by job_id.
     * @param {number} request.pageSize
     *   If specified, determines the maximum number of stages to
     *   return.  If unspecified, the service may choose an appropriate
     *   default, or may return an arbitrarily large number of results.
     * @param {string} request.pageToken
     *   If supplied, this should be the value of next_page_token returned
     *   by an earlier call. This will cause the next page of results to
     *   be returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.dataflow.v1beta3.StageSummary|StageSummary} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `getJobExecutionDetailsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    getJobExecutionDetailsStream(request?: protos.google.dataflow.v1beta3.IGetJobExecutionDetailsRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `getJobExecutionDetails`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.projectId
     *   A project id.
     * @param {string} request.jobId
     *   The job to get execution details for.
     * @param {string} request.location
     *   The [regional endpoint]
     *   (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
     *   contains the job specified by job_id.
     * @param {number} request.pageSize
     *   If specified, determines the maximum number of stages to
     *   return.  If unspecified, the service may choose an appropriate
     *   default, or may return an arbitrarily large number of results.
     * @param {string} request.pageToken
     *   If supplied, this should be the value of next_page_token returned
     *   by an earlier call. This will cause the next page of results to
     *   be returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.dataflow.v1beta3.StageSummary|StageSummary}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta3/metrics_v1_beta3.get_job_execution_details.js</caption>
     * region_tag:dataflow_v1beta3_generated_MetricsV1Beta3_GetJobExecutionDetails_async
     */
    getJobExecutionDetailsAsync(request?: protos.google.dataflow.v1beta3.IGetJobExecutionDetailsRequest, options?: CallOptions): AsyncIterable<protos.google.dataflow.v1beta3.IStageSummary>;
    /**
     * Request detailed information about the execution status of a stage of the
     * job.
     *
     * EXPERIMENTAL.  This API is subject to change or removal without notice.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.projectId
     *   A project id.
     * @param {string} request.jobId
     *   The job to get execution details for.
     * @param {string} request.location
     *   The [regional endpoint]
     *   (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
     *   contains the job specified by job_id.
     * @param {string} request.stageId
     *   The stage for which to fetch information.
     * @param {number} request.pageSize
     *   If specified, determines the maximum number of work items to
     *   return.  If unspecified, the service may choose an appropriate
     *   default, or may return an arbitrarily large number of results.
     * @param {string} request.pageToken
     *   If supplied, this should be the value of next_page_token returned
     *   by an earlier call. This will cause the next page of results to
     *   be returned.
     * @param {google.protobuf.Timestamp} request.startTime
     *   Lower time bound of work items to include, by start time.
     * @param {google.protobuf.Timestamp} request.endTime
     *   Upper time bound of work items to include, by start time.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.dataflow.v1beta3.WorkerDetails|WorkerDetails}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `getStageExecutionDetailsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    getStageExecutionDetails(request?: protos.google.dataflow.v1beta3.IGetStageExecutionDetailsRequest, options?: CallOptions): Promise<[
        protos.google.dataflow.v1beta3.IWorkerDetails[],
        protos.google.dataflow.v1beta3.IGetStageExecutionDetailsRequest | null,
        protos.google.dataflow.v1beta3.IStageExecutionDetails
    ]>;
    getStageExecutionDetails(request: protos.google.dataflow.v1beta3.IGetStageExecutionDetailsRequest, options: CallOptions, callback: PaginationCallback<protos.google.dataflow.v1beta3.IGetStageExecutionDetailsRequest, protos.google.dataflow.v1beta3.IStageExecutionDetails | null | undefined, protos.google.dataflow.v1beta3.IWorkerDetails>): void;
    getStageExecutionDetails(request: protos.google.dataflow.v1beta3.IGetStageExecutionDetailsRequest, callback: PaginationCallback<protos.google.dataflow.v1beta3.IGetStageExecutionDetailsRequest, protos.google.dataflow.v1beta3.IStageExecutionDetails | null | undefined, protos.google.dataflow.v1beta3.IWorkerDetails>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.projectId
     *   A project id.
     * @param {string} request.jobId
     *   The job to get execution details for.
     * @param {string} request.location
     *   The [regional endpoint]
     *   (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
     *   contains the job specified by job_id.
     * @param {string} request.stageId
     *   The stage for which to fetch information.
     * @param {number} request.pageSize
     *   If specified, determines the maximum number of work items to
     *   return.  If unspecified, the service may choose an appropriate
     *   default, or may return an arbitrarily large number of results.
     * @param {string} request.pageToken
     *   If supplied, this should be the value of next_page_token returned
     *   by an earlier call. This will cause the next page of results to
     *   be returned.
     * @param {google.protobuf.Timestamp} request.startTime
     *   Lower time bound of work items to include, by start time.
     * @param {google.protobuf.Timestamp} request.endTime
     *   Upper time bound of work items to include, by start time.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.dataflow.v1beta3.WorkerDetails|WorkerDetails} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `getStageExecutionDetailsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    getStageExecutionDetailsStream(request?: protos.google.dataflow.v1beta3.IGetStageExecutionDetailsRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `getStageExecutionDetails`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.projectId
     *   A project id.
     * @param {string} request.jobId
     *   The job to get execution details for.
     * @param {string} request.location
     *   The [regional endpoint]
     *   (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that
     *   contains the job specified by job_id.
     * @param {string} request.stageId
     *   The stage for which to fetch information.
     * @param {number} request.pageSize
     *   If specified, determines the maximum number of work items to
     *   return.  If unspecified, the service may choose an appropriate
     *   default, or may return an arbitrarily large number of results.
     * @param {string} request.pageToken
     *   If supplied, this should be the value of next_page_token returned
     *   by an earlier call. This will cause the next page of results to
     *   be returned.
     * @param {google.protobuf.Timestamp} request.startTime
     *   Lower time bound of work items to include, by start time.
     * @param {google.protobuf.Timestamp} request.endTime
     *   Upper time bound of work items to include, by start time.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.dataflow.v1beta3.WorkerDetails|WorkerDetails}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta3/metrics_v1_beta3.get_stage_execution_details.js</caption>
     * region_tag:dataflow_v1beta3_generated_MetricsV1Beta3_GetStageExecutionDetails_async
     */
    getStageExecutionDetailsAsync(request?: protos.google.dataflow.v1beta3.IGetStageExecutionDetailsRequest, options?: CallOptions): AsyncIterable<protos.google.dataflow.v1beta3.IWorkerDetails>;
    /**
     * Terminate the gRPC channel and close the client.
     *
     * The client will no longer be usable and all future behavior is undefined.
     * @returns {Promise} A promise that resolves when the client is closed.
     */
    close(): Promise<void>;
}
