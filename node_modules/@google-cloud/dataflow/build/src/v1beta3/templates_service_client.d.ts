import type * as gax from 'google-gax';
import type { Callback, CallOptions, Descriptors, ClientOptions } from 'google-gax';
import * as protos from '../../protos/protos';
/**
 *  Provides a method to create Cloud Dataflow jobs from templates.
 * @class
 * @memberof v1beta3
 */
export declare class TemplatesServiceClient {
    private _terminated;
    private _opts;
    private _providedCustomServicePath;
    private _gaxModule;
    private _gaxGrpc;
    private _protos;
    private _defaults;
    auth: gax.GoogleAuth;
    descriptors: Descriptors;
    warn: (code: string, message: string, warnType?: string) => void;
    innerApiCalls: {
        [name: string]: Function;
    };
    templatesServiceStub?: Promise<{
        [name: string]: Function;
    }>;
    /**
     * Construct an instance of TemplatesServiceClient.
     *
     * @param {object} [options] - The configuration object.
     * The options accepted by the constructor are described in detail
     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
     * The common options are:
     * @param {object} [options.credentials] - Credentials object.
     * @param {string} [options.credentials.client_email]
     * @param {string} [options.credentials.private_key]
     * @param {string} [options.email] - Account email address. Required when
     *     using a .pem or .p12 keyFilename.
     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
     *     .p12 key downloaded from the Google Developers Console. If you provide
     *     a path to a JSON file, the projectId option below is not necessary.
     *     NOTE: .pem and .p12 require you to specify options.email as well.
     * @param {number} [options.port] - The port on which to connect to
     *     the remote host.
     * @param {string} [options.projectId] - The project ID from the Google
     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
     *     the environment variable GCLOUD_PROJECT for your project ID. If your
     *     app is running in an environment which supports
     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
     *     your project ID will be detected automatically.
     * @param {string} [options.apiEndpoint] - The domain name of the
     *     API remote host.
     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
     *     Follows the structure of {@link gapicConfig}.
     * @param {boolean | "rest"} [options.fallback] - Use HTTP fallback mode.
     *     Pass "rest" to use HTTP/1.1 REST API instead of gRPC.
     *     For more information, please check the
     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
     *     need to avoid loading the default gRPC version and want to use the fallback
     *     HTTP implementation. Load only fallback version and pass it to the constructor:
     *     ```
     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
     *     const client = new TemplatesServiceClient({fallback: 'rest'}, gax);
     *     ```
     */
    constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback);
    /**
     * Initialize the client.
     * Performs asynchronous operations (such as authentication) and prepares the client.
     * This function will be called automatically when any class method is called for the
     * first time, but if you need to initialize it before calling an actual method,
     * feel free to call initialize() directly.
     *
     * You can await on this method if you want to make sure the client is initialized.
     *
     * @returns {Promise} A promise that resolves to an authenticated service stub.
     */
    initialize(): Promise<{
        [name: string]: Function;
    }>;
    /**
     * The DNS address for this API service.
     * @returns {string} The DNS address for this service.
     */
    static get servicePath(): string;
    /**
     * The DNS address for this API service - same as servicePath(),
     * exists for compatibility reasons.
     * @returns {string} The DNS address for this service.
     */
    static get apiEndpoint(): string;
    /**
     * The port for this API service.
     * @returns {number} The default port for this service.
     */
    static get port(): number;
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     * @returns {string[]} List of default scopes.
     */
    static get scopes(): string[];
    getProjectId(): Promise<string>;
    getProjectId(callback: Callback<string, undefined, undefined>): void;
    /**
     * Creates a Cloud Dataflow job from a template.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.projectId
     *   Required. The ID of the Cloud Platform project that the job belongs to.
     * @param {string} request.jobName
     *   Required. The job name to use for the created job.
     * @param {string} request.gcsPath
     *   Required. A Cloud Storage path to the template from which to
     *   create the job.
     *   Must be a valid Cloud Storage URL, beginning with `gs://`.
     * @param {number[]} request.parameters
     *   The runtime parameters to pass to the job.
     * @param {google.dataflow.v1beta3.RuntimeEnvironment} request.environment
     *   The runtime environment for the job.
     * @param {string} request.location
     *   The [regional endpoint]
     *   (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to
     *   which to direct the request.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.dataflow.v1beta3.Job|Job}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta3/templates_service.create_job_from_template.js</caption>
     * region_tag:dataflow_v1beta3_generated_TemplatesService_CreateJobFromTemplate_async
     */
    createJobFromTemplate(request?: protos.google.dataflow.v1beta3.ICreateJobFromTemplateRequest, options?: CallOptions): Promise<[
        protos.google.dataflow.v1beta3.IJob,
        protos.google.dataflow.v1beta3.ICreateJobFromTemplateRequest | undefined,
        {} | undefined
    ]>;
    createJobFromTemplate(request: protos.google.dataflow.v1beta3.ICreateJobFromTemplateRequest, options: CallOptions, callback: Callback<protos.google.dataflow.v1beta3.IJob, protos.google.dataflow.v1beta3.ICreateJobFromTemplateRequest | null | undefined, {} | null | undefined>): void;
    createJobFromTemplate(request: protos.google.dataflow.v1beta3.ICreateJobFromTemplateRequest, callback: Callback<protos.google.dataflow.v1beta3.IJob, protos.google.dataflow.v1beta3.ICreateJobFromTemplateRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Launch a template.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.projectId
     *   Required. The ID of the Cloud Platform project that the job belongs to.
     * @param {boolean} request.validateOnly
     *   If true, the request is validated but not actually executed.
     *   Defaults to false.
     * @param {string} request.gcsPath
     *   A Cloud Storage path to the template from which to create
     *   the job.
     *   Must be valid Cloud Storage URL, beginning with 'gs://'.
     * @param {google.dataflow.v1beta3.DynamicTemplateLaunchParams} request.dynamicTemplate
     *   Params for launching a dynamic template.
     * @param {google.dataflow.v1beta3.LaunchTemplateParameters} request.launchParameters
     *   The parameters of the template to launch. This should be part of the
     *   body of the POST request.
     * @param {string} request.location
     *   The [regional endpoint]
     *   (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to
     *   which to direct the request.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.dataflow.v1beta3.LaunchTemplateResponse|LaunchTemplateResponse}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta3/templates_service.launch_template.js</caption>
     * region_tag:dataflow_v1beta3_generated_TemplatesService_LaunchTemplate_async
     */
    launchTemplate(request?: protos.google.dataflow.v1beta3.ILaunchTemplateRequest, options?: CallOptions): Promise<[
        protos.google.dataflow.v1beta3.ILaunchTemplateResponse,
        protos.google.dataflow.v1beta3.ILaunchTemplateRequest | undefined,
        {} | undefined
    ]>;
    launchTemplate(request: protos.google.dataflow.v1beta3.ILaunchTemplateRequest, options: CallOptions, callback: Callback<protos.google.dataflow.v1beta3.ILaunchTemplateResponse, protos.google.dataflow.v1beta3.ILaunchTemplateRequest | null | undefined, {} | null | undefined>): void;
    launchTemplate(request: protos.google.dataflow.v1beta3.ILaunchTemplateRequest, callback: Callback<protos.google.dataflow.v1beta3.ILaunchTemplateResponse, protos.google.dataflow.v1beta3.ILaunchTemplateRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Get the template associated with a template.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.projectId
     *   Required. The ID of the Cloud Platform project that the job belongs to.
     * @param {string} request.gcsPath
     *   Required. A Cloud Storage path to the template from which to
     *   create the job.
     *   Must be valid Cloud Storage URL, beginning with 'gs://'.
     * @param {google.dataflow.v1beta3.GetTemplateRequest.TemplateView} request.view
     *   The view to retrieve. Defaults to METADATA_ONLY.
     * @param {string} request.location
     *   The [regional endpoint]
     *   (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) to
     *   which to direct the request.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.dataflow.v1beta3.GetTemplateResponse|GetTemplateResponse}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta3/templates_service.get_template.js</caption>
     * region_tag:dataflow_v1beta3_generated_TemplatesService_GetTemplate_async
     */
    getTemplate(request?: protos.google.dataflow.v1beta3.IGetTemplateRequest, options?: CallOptions): Promise<[
        protos.google.dataflow.v1beta3.IGetTemplateResponse,
        protos.google.dataflow.v1beta3.IGetTemplateRequest | undefined,
        {} | undefined
    ]>;
    getTemplate(request: protos.google.dataflow.v1beta3.IGetTemplateRequest, options: CallOptions, callback: Callback<protos.google.dataflow.v1beta3.IGetTemplateResponse, protos.google.dataflow.v1beta3.IGetTemplateRequest | null | undefined, {} | null | undefined>): void;
    getTemplate(request: protos.google.dataflow.v1beta3.IGetTemplateRequest, callback: Callback<protos.google.dataflow.v1beta3.IGetTemplateResponse, protos.google.dataflow.v1beta3.IGetTemplateRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Terminate the gRPC channel and close the client.
     *
     * The client will no longer be usable and all future behavior is undefined.
     * @returns {Promise} A promise that resolves when the client is closed.
     */
    close(): Promise<void>;
}
